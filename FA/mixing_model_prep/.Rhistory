}
}
closed_profiles
agg_profiles
dim(agg_profiles)
closed_profiles <- matrix(nrow=nrow(agg_profiles), ncol=ncol(agg_profiles))
closed_profiles <- matrix(nrow=nrow(agg_profiles), ncol=ncol(agg_profiles))
for(i in 1:nrow(agg_profiles)){
for(j in 1:ncol(agg_profiles)){
closed_profiles[i,j] <- (1/sum(agg_profiles[i,1:ncol(agg_profiles)])) * agg_profiles[i,j]
}
}
closed_profiles
sum(closed_profiles[,1])
sum(closed_profiles[1,])
prey_data
View(prey_data)
prey_data[1,1]
typevec
setwd("C:/Users/Mike/Dropbox/Grad/Projects/Thesis/Seven Lakes Project 2014/Data/FA/mixing_model_prep")
# library(graph)
# library(Rgraphviz)
library(fastinR)
library(knitr)
library(stringr)
library(rjags)
# library(rgr)
#FA conversion coefficients####
#take two
nsamp <- 3
data <- read.csv('fa.csv', header=T, row.names=1)
prey_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
pred_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
index <- rep(1:3, 10)
for(j in 1:ncol(prey_data)){
for(i in 1:nrow(prey_data)){
prey_data[i,j] <- abs(rnorm(1, data[i,index[j]], data[i,(index[j]+6)]))
pred_data[i,j] <- abs(rnorm(1, data[i,(index[j]+3)], data[i,(index[j]+9)]))
}
}
index2 <- seq(1,30,3)
prey_data <- t(Reduce(cbind, list(prey_data[,index2],
prey_data[,(index2+1)], prey_data[,(index2+2)])))
pred_data <- t(Reduce(cbind, list(pred_data[,index2],
pred_data[,(index2+1)], pred_data[,(index2+2)])))
rownames(prey_data) <- rep(c('peri_prey', 'phyto_prey', 'terr_prey'), each=10)
rownames(pred_data) <- rep(c('peri_pred', 'phyto_pred', 'terr_pred'), each=10)
colnames(prey_data) <- rownames(data)
colnames(pred_data) <- rownames(data)
typevec <- rep(c('peri', 'phyto', 'terr'), each=10)
ntypes <- 3
nsamp <- 30
nfas <- nrow(data)
#data load and setup
# pred_data <- t(read.csv("allochthony_FA_consumer.csv", header = T, row.names = 1))
# prey_data <- t(read.csv("allochthony_FA_producer.csv", header = T,
#                    stringsAsFactors = F, row.names = 1))
#
# prey_types <- factor(str_match(rownames(prey_data), '(\\w*)')[,2])
# pred_types <- factor(str_match(rownames(pred_data), '\\_(\\w+)')[,2])
# pred_lakes <- factor(str_match(rownames(pred_data), '(\\w+)\\_')[,2])
# prey_lakes <- rep(pred_lakes, each=3)
# FAs <- colnames(pred_data)
# nprey <- length(levels(prey_types))
# nfas <- ncol(pred_data)
# npred <- nrow(pred_data)
# replace NAs in compositions with 0.00001
for (i in 1:nfas) {
prey_data[is.na(prey_data[,i]) == TRUE, i] <- 0.00001
}
for (i in 1:nfas) {
pred_data[is.na(pred_data[,i]) == TRUE, i] <- 0.00001
}
# combine FA profiles by prey type and apply closure (sum-to-1) operation
agg_profiles <- aggregate(prey_data, list(typevec), gmean)
agg_samp_types <- as.character(agg_profiles[,1])
agg_profiles <- agg_profiles[,-1]
closed_profiles <- matrix(nrow=nrow(agg_profiles), ncol=ncol(agg_profiles))
for(i in 1:nrow(agg_profiles)){
for(j in 1:ncol(agg_profiles)){
closed_profiles[i,j] <- (1/sum(agg_profiles[i,1:ncol(agg_profiles)])) * agg_profiles[i,j]
}
}
data <- list('nsamp'=nsamp, 'nfas'=nfas,
'prey_gmean'=closed_profiles, 'prey_data'=prey_data, 'pred_data'=pred_data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
data <- list('nsamp'=nsamp, 'nfas'=nfas, 'ntypes'=ntypes,
'prey_gmean'=closed_profiles, 'prey_data'=prey_data, 'pred_data'=pred_data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
data <- list('nsamp'=nsamp, 'nfas'=nfas, 'ntypes'=ntypes, 'typevec'=typevec,
'prey_gmean'=closed_profiles, 'prey_data'=prey_data, 'pred_data'=pred_data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
setwd("C:/Users/Mike/Dropbox/Grad/Projects/Thesis/Seven Lakes Project 2014/Data/FA/mixing_model_prep")
# library(graph)
# library(Rgraphviz)
library(fastinR)
library(knitr)
library(stringr)
library(rjags)
# library(rgr)
#FA conversion coefficients####
#take two
nsamp <- 3
data <- read.csv('fa.csv', header=T, row.names=1)
prey_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
pred_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
index <- rep(1:3, 10)
for(j in 1:ncol(prey_data)){
for(i in 1:nrow(prey_data)){
prey_data[i,j] <- abs(rnorm(1, data[i,index[j]], data[i,(index[j]+6)]))
pred_data[i,j] <- abs(rnorm(1, data[i,(index[j]+3)], data[i,(index[j]+9)]))
}
}
index2 <- seq(1,30,3)
prey_data <- t(Reduce(cbind, list(prey_data[,index2],
prey_data[,(index2+1)], prey_data[,(index2+2)])))
pred_data <- t(Reduce(cbind, list(pred_data[,index2],
pred_data[,(index2+1)], pred_data[,(index2+2)])))
rownames(prey_data) <- rep(c('peri_prey', 'phyto_prey', 'terr_prey'), each=10)
rownames(pred_data) <- rep(c('peri_pred', 'phyto_pred', 'terr_pred'), each=10)
colnames(prey_data) <- rownames(data)
colnames(pred_data) <- rownames(data)
typevec <- rep(c('peri', 'phyto', 'terr'), each=10)
ntypes <- 3
nsamp <- 30
nfas <- nrow(data)
#data load and setup
# pred_data <- t(read.csv("allochthony_FA_consumer.csv", header = T, row.names = 1))
# prey_data <- t(read.csv("allochthony_FA_producer.csv", header = T,
#                    stringsAsFactors = F, row.names = 1))
#
# prey_types <- factor(str_match(rownames(prey_data), '(\\w*)')[,2])
# pred_types <- factor(str_match(rownames(pred_data), '\\_(\\w+)')[,2])
# pred_lakes <- factor(str_match(rownames(pred_data), '(\\w+)\\_')[,2])
# prey_lakes <- rep(pred_lakes, each=3)
# FAs <- colnames(pred_data)
# nprey <- length(levels(prey_types))
# nfas <- ncol(pred_data)
# npred <- nrow(pred_data)
# replace NAs in compositions with 0.00001
for (i in 1:nfas) {
prey_data[is.na(prey_data[,i]) == TRUE, i] <- 0.00001
}
for (i in 1:nfas) {
pred_data[is.na(pred_data[,i]) == TRUE, i] <- 0.00001
}
# combine FA profiles by prey type and apply closure (sum-to-1) operation
agg_profiles <- aggregate(prey_data, list(typevec), gmean)
agg_samp_types <- as.character(agg_profiles[,1])
agg_profiles <- agg_profiles[,-1]
closed_profiles <- matrix(nrow=nrow(agg_profiles), ncol=ncol(agg_profiles))
for(i in 1:nrow(agg_profiles)){
for(j in 1:ncol(agg_profiles)){
closed_profiles[i,j] <- (1/sum(agg_profiles[i,1:ncol(agg_profiles)])) * agg_profiles[i,j]
}
}
#assemble and run model
data <- list('nsamp'=nsamp, 'nfas'=nfas, 'ntypes'=ntypes, 'typevec'=typevec,
'prey_gmean'=closed_profiles, 'prey_data'=prey_data, 'pred_data'=pred_data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
setwd("C:/Users/Mike/Dropbox/Grad/Projects/Thesis/Seven Lakes Project 2014/Data/FA/mixing_model_prep")
# library(graph)
# library(Rgraphviz)
library(fastinR)
library(knitr)
library(stringr)
library(rjags)
# library(rgr)
#FA conversion coefficients####
#take two
nsamp <- 3
data <- read.csv('fa.csv', header=T, row.names=1)
prey_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
pred_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
index <- rep(1:3, 10)
for(j in 1:ncol(prey_data)){
for(i in 1:nrow(prey_data)){
prey_data[i,j] <- abs(rnorm(1, data[i,index[j]], data[i,(index[j]+6)]))
pred_data[i,j] <- abs(rnorm(1, data[i,(index[j]+3)], data[i,(index[j]+9)]))
}
}
index2 <- seq(1,30,3)
prey_data <- t(Reduce(cbind, list(prey_data[,index2],
prey_data[,(index2+1)], prey_data[,(index2+2)])))
pred_data <- t(Reduce(cbind, list(pred_data[,index2],
pred_data[,(index2+1)], pred_data[,(index2+2)])))
rownames(prey_data) <- rep(c('peri_prey', 'phyto_prey', 'terr_prey'), each=10)
rownames(pred_data) <- rep(c('peri_pred', 'phyto_pred', 'terr_pred'), each=10)
colnames(prey_data) <- rownames(data)
colnames(pred_data) <- rownames(data)
typevec <- rep(c('peri', 'phyto', 'terr'), each=10)
ntypes <- 3
nsamp <- 30
nfas <- nrow(data)
#data load and setup
# pred_data <- t(read.csv("allochthony_FA_consumer.csv", header = T, row.names = 1))
# prey_data <- t(read.csv("allochthony_FA_producer.csv", header = T,
#                    stringsAsFactors = F, row.names = 1))
#
# prey_types <- factor(str_match(rownames(prey_data), '(\\w*)')[,2])
# pred_types <- factor(str_match(rownames(pred_data), '\\_(\\w+)')[,2])
# pred_lakes <- factor(str_match(rownames(pred_data), '(\\w+)\\_')[,2])
# prey_lakes <- rep(pred_lakes, each=3)
# FAs <- colnames(pred_data)
# nprey <- length(levels(prey_types))
# nfas <- ncol(pred_data)
# npred <- nrow(pred_data)
# replace NAs in compositions with 0.00001
for (i in 1:nfas) {
prey_data[is.na(prey_data[,i]) == TRUE, i] <- 0.00001
}
for (i in 1:nfas) {
pred_data[is.na(pred_data[,i]) == TRUE, i] <- 0.00001
}
# combine FA profiles by prey type and apply closure (sum-to-1) operation
agg_profiles <- aggregate(prey_data, list(typevec), gmean)
agg_samp_types <- as.character(agg_profiles[,1])
agg_profiles <- agg_profiles[,-1]
closed_profiles <- matrix(nrow=nrow(agg_profiles), ncol=ncol(agg_profiles))
for(i in 1:nrow(agg_profiles)){
for(j in 1:ncol(agg_profiles)){
closed_profiles[i,j] <- (1/sum(agg_profiles[i,1:ncol(agg_profiles)])) * agg_profiles[i,j]
}
}
# for Wishart hyperprior on conv_coef
R <- diag(0.01, nfas)
#assemble and run model
data <- list('nsamp'=nsamp, 'nfas'=nfas, 'ntypes'=ntypes, 'typevec'=typevec, 'R'=R,
'prey_gmean'=closed_profiles, 'prey_data'=prey_data, 'pred_data'=pred_data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
setwd("C:/Users/Mike/Dropbox/Grad/Projects/Thesis/Seven Lakes Project 2014/Data/FA/mixing_model_prep")
# library(graph)
# library(Rgraphviz)
library(fastinR)
library(knitr)
library(stringr)
library(rjags)
# library(rgr)
#FA conversion coefficients####
#take two
nsamp <- 3
data <- read.csv('fa.csv', header=T, row.names=1)
prey_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
pred_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
index <- rep(1:3, 10)
for(j in 1:ncol(prey_data)){
for(i in 1:nrow(prey_data)){
prey_data[i,j] <- abs(rnorm(1, data[i,index[j]], data[i,(index[j]+6)]))
pred_data[i,j] <- abs(rnorm(1, data[i,(index[j]+3)], data[i,(index[j]+9)]))
}
}
index2 <- seq(1,30,3)
prey_data <- t(Reduce(cbind, list(prey_data[,index2],
prey_data[,(index2+1)], prey_data[,(index2+2)])))
pred_data <- t(Reduce(cbind, list(pred_data[,index2],
pred_data[,(index2+1)], pred_data[,(index2+2)])))
rownames(prey_data) <- rep(c('peri_prey', 'phyto_prey', 'terr_prey'), each=10)
rownames(pred_data) <- rep(c('peri_pred', 'phyto_pred', 'terr_pred'), each=10)
colnames(prey_data) <- rownames(data)
colnames(pred_data) <- rownames(data)
typevec <- rep(c('peri', 'phyto', 'terr'), each=10)
ntypes <- 3
nsamp <- 30
nfas <- nrow(data)
#data load and setup
# pred_data <- t(read.csv("allochthony_FA_consumer.csv", header = T, row.names = 1))
# prey_data <- t(read.csv("allochthony_FA_producer.csv", header = T,
#                    stringsAsFactors = F, row.names = 1))
#
# prey_types <- factor(str_match(rownames(prey_data), '(\\w*)')[,2])
# pred_types <- factor(str_match(rownames(pred_data), '\\_(\\w+)')[,2])
# pred_lakes <- factor(str_match(rownames(pred_data), '(\\w+)\\_')[,2])
# prey_lakes <- rep(pred_lakes, each=3)
# FAs <- colnames(pred_data)
# nprey <- length(levels(prey_types))
# nfas <- ncol(pred_data)
# npred <- nrow(pred_data)
# replace NAs in compositions with 0.00001
for (i in 1:nfas) {
prey_data[is.na(prey_data[,i]) == TRUE, i] <- 0.00001
}
for (i in 1:nfas) {
pred_data[is.na(pred_data[,i]) == TRUE, i] <- 0.00001
}
# combine FA profiles by prey type and apply closure (sum-to-1) operation
agg_profiles <- aggregate(prey_data, list(typevec), gmean)
agg_samp_types <- as.character(agg_profiles[,1])
agg_profiles <- agg_profiles[,-1]
closed_profiles <- matrix(nrow=nrow(agg_profiles), ncol=ncol(agg_profiles))
for(i in 1:nrow(agg_profiles)){
for(j in 1:ncol(agg_profiles)){
closed_profiles[i,j] <- (1/sum(agg_profiles[i,1:ncol(agg_profiles)])) * agg_profiles[i,j]
}
}
# for Wishart hyperprior on conv_coef
# R <- diag(0.01, nfas)
#assemble and run model
data <- list('nsamp'=nsamp, 'nfas'=nfas, 'ntypes'=ntypes, 'typevec'=typevec,
'prey_gmean'=closed_profiles, 'prey_data'=prey_data, 'pred_data'=pred_data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
rdirichlet(1, c(1,1,1))
rdirichlet(1, c(1,1,1))
rdirichlet(2, c(1,1,1))
rdirichlet(20, c(1,1,1) )
detach("package:coda", unload=TRUE)
detach("package:compositions", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:energy", unload=TRUE)
detach("package:fastinR", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:ggmcmc", unload=TRUE)
detach("package:graph", unload=TRUE)
detach("package:knitr", unload=TRUE)
detach("package:reshape", unload=TRUE)
detach("package:RColorBrewer", unload=TRUE)
detach("package:R2jags", unload=TRUE)
detach("package:Rgraphviz", unload=TRUE)
detach("package:rjags", unload=TRUE)
detach("package:robustbase", unload=TRUE)
detach("package:tidyr", unload=TRUE)
detach("package:tensorA", unload=TRUE)
rdirichlet(20, c(1,1,1) )
rdirichlet(1, c(1,1,1))
apropos('dirichlet')
detach("package:bayesm", unload=TRUE)
setwd("~/Dropbox/Grad/Projects/Thesis/Seven Lakes Project 2014/Data/FA/mixing_model_prep")
rm(list=ls())
# library(graph)
# library(Rgraphviz)
library(fastinR)
library(knitr)
install.packages("knitr")
library(knitr)
library(stringr)
library(rjags)
nsamp <- 3
data <- read.csv('fa.csv', header=T, row.names=1)
prey_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
pred_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
index <- rep(1:3, 10)
for(j in 1:ncol(prey_data)){
for(i in 1:nrow(prey_data)){
prey_data[i,j] <- abs(rnorm(1, data[i,index[j]], data[i,(index[j]+6)]))
pred_data[i,j] <- abs(rnorm(1, data[i,(index[j]+3)], data[i,(index[j]+9)]))
}
}
index2 <- seq(1,30,3)
prey_data <- t(Reduce(cbind, list(prey_data[,index2],
prey_data[,(index2+1)], prey_data[,(index2+2)])))
pred_data <- t(Reduce(cbind, list(pred_data[,index2],
pred_data[,(index2+1)], pred_data[,(index2+2)])))
rownames(prey_data) <- rep(c('peri_prey', 'phyto_prey', 'terr_prey'), each=10)
rownames(pred_data) <- rep(c('peri_pred', 'phyto_pred', 'terr_pred'), each=10)
colnames(prey_data) <- rownames(data)
colnames(pred_data) <- rownames(data)
typevec <- rep(c('peri', 'phyto', 'terr'), each=10)
ntypes <- 3
nsamp <- 30
nfas <- nrow(data)
#
for (i in 1:nfas) {
prey_data[is.na(prey_data[,i]) == TRUE, i] <- 0.00001
}
for (i in 1:nfas) {
pred_data[is.na(pred_data[,i]) == TRUE, i] <- 0.00001
}
apropos('gmean')
apropos('geometric')
apropos('geo')
agg_profiles <- aggregate(prey_data, list(typevec), function(x){exp(mean(log(x))))
agg_profiles <- aggregate(prey_data, list(typevec), function(x){exp(mean(log(x)))})
agg_profiles
agg_samp_types <- as.character(agg_profiles[,1])
agg_profiles <- agg_profiles[,-1]
sum(agg_profiles[1,])
sum(agg_profiles[,1])
list(typevec)
gmean <- function(x){
out <- exp(mean(log(x)))
return(out)
}
agg_profiles <- aggregate(prey_data, by=list(typevec), gmean)
sum(agg_profiles[1,])
agg_profiles
agg_samp_types <- as.character(agg_profiles[,1])
agg_profiles <- agg_profiles[,-1]
sum(agg_profiles[1,])
sum(agg_profiles[,1])
gmean <- function(x){
out <- t(apply(x,1,function(y){exp(mean(log(x)))}))
return(out)
}
agg_profiles <- aggregate(prey_data, by=list(typevec), gmean)
gmean <- function(x) if (is.null(dim(x))) {exp(mean(log(x)))} else { t(apply(x,1,
function(y){exp(mean(log(x)))}))}
agg_profiles <- aggregate(prey_data, by=list(typevec), gmean)1
# setwd("C:/Users/Mike/Dropbox/Grad/Projects/Thesis/Seven Lakes Project 2014/Data/FA/mixing_model_prep")
setwd("~/Dropbox/Grad/Projects/Thesis/Seven Lakes Project 2014/Data/FA/mixing_model_prep")
rm(list=ls())
# library(graph)
# library(Rgraphviz)
library(fastinR)
library(knitr)
library(stringr)
library(rjags)
# library(rgr)
#FA conversion coefficients####
#take two
nsamp <- 3
data <- read.csv('fa.csv', header=T, row.names=1)
prey_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
pred_data <- matrix(nrow=nrow(data), ncol=nsamp*10)
index <- rep(1:3, 10)
for(j in 1:ncol(prey_data)){
for(i in 1:nrow(prey_data)){
prey_data[i,j] <- abs(rnorm(1, data[i,index[j]], data[i,(index[j]+6)]))
pred_data[i,j] <- abs(rnorm(1, data[i,(index[j]+3)], data[i,(index[j]+9)]))
}
}
index2 <- seq(1,30,3)
prey_data <- t(Reduce(cbind, list(prey_data[,index2],
prey_data[,(index2+1)], prey_data[,(index2+2)])))
pred_data <- t(Reduce(cbind, list(pred_data[,index2],
pred_data[,(index2+1)], pred_data[,(index2+2)])))
rownames(prey_data) <- rep(c('peri_prey', 'phyto_prey', 'terr_prey'), each=10)
rownames(pred_data) <- rep(c('peri_pred', 'phyto_pred', 'terr_pred'), each=10)
colnames(prey_data) <- rownames(data)
colnames(pred_data) <- rownames(data)
typevec <- rep(c('peri', 'phyto', 'terr'), each=10)
ntypes <- 3
nsamp <- 30
nfas <- nrow(data)
#data load and setup
# pred_data <- t(read.csv("allochthony_FA_consumer.csv", header = T, row.names = 1))
# prey_data <- t(read.csv("allochthony_FA_producer.csv", header = T,
#                    stringsAsFactors = F, row.names = 1))
#
# prey_types <- factor(str_match(rownames(prey_data), '(\\w*)')[,2])
# pred_types <- factor(str_match(rownames(pred_data), '\\_(\\w+)')[,2])
# pred_lakes <- factor(str_match(rownames(pred_data), '(\\w+)\\_')[,2])
# prey_lakes <- rep(pred_lakes, each=3)
# FAs <- colnames(pred_data)
# nprey <- length(levels(prey_types))
# nfas <- ncol(pred_data)
# npred <- nrow(pred_data)
# replace NAs in compositions with 0.00001
for (i in 1:nfas) {
prey_data[is.na(prey_data[,i]) == TRUE, i] <- 0.00001
}
for (i in 1:nfas) {
pred_data[is.na(pred_data[,i]) == TRUE, i] <- 0.00001
}
gmean <- function(x) if (is.null(dim(x))) {exp(mean(log(x)))} else { t(apply(x,1,
function(y){exp(mean(log(x)))}))}
agg_profiles <- aggregate(prey_data, by=list(typevec), gmean)1
agg_profiles <- aggregate(prey_data, by=list(typevec), gmean)
agg_samp_types <- as.character(agg_profiles[,1])
agg_profiles <- agg_profiles[,-1]
closed_profiles <- matrix(nrow=nrow(agg_profiles), ncol=ncol(agg_profiles))
for(i in 1:nrow(agg_profiles)){
for(j in 1:ncol(agg_profiles)){
closed_profiles[i,j] <- (1/sum(agg_profiles[i,1:ncol(agg_profiles)])) * agg_profiles[i,j]
}
}
R <- diag(0.01, nfas)
data <- list('nsamp'=nsamp, 'nfas'=nfas, 'ntypes'=ntypes, 'typevec'=typevec, 'R'=R,
'prey_gmean'=closed_profiles, 'prey_data'=prey_data, 'pred_data'=pred_data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
S <- diag(0.01, nfas)
data <- list('nsamp'=nsamp, 'nfas'=nfas, 'ntypes'=ntypes, 'typevec'=typevec, 'R'=S,
'prey_gmean'=closed_profiles, 'prey_data'=prey_data, 'pred_data'=pred_data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
R <- diag(0.01, nfas)
#assemble and run model
data <- list('nsamp'=nsamp, 'nfas'=nfas, 'ntypes'=ntypes, 'typevec'=typevec, 'R'=R,
'prey_gmean'=closed_profiles, 'prey_data'=prey_data, 'pred_data'=pred_data)
data <- list('nsamp'=nsamp, 'nfas'=nfas, 'ntypes'=ntypes, 'typevec'=typevec,
'prey_gmean'=closed_profiles, 'prey_data'=prey_data, 'pred_data'=pred_data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
R <- diag(0.01, nfas)
data <- list('nsamp'=nsamp, 'nfas'=nfas, 'ntypes'=ntypes, 'typevec'=typevec, 'R'=R,
'prey_gmean'=closed_profiles, 'prey_data'=prey_data, 'pred_data'=pred_data)
mod <- jags.model("FA_conversion_coeffs.txt", n.chains = 3, data=data)
