cap.length=0.015, col=err, lwd=1.4)
}
for(cons in c('Calanoida', 'Cladocera', 'Trichoptera')){
if(lake == 3 & cons == 'Cladocera') next
row2 <- which(agg2[,1] == lake & agg2[,2] == cons)
if(cons == 'Calanoida'){
points(agg2[row2,3+ind1], agg2[row2,3+ind2], pch=21, cex=1.5, col=pt, bg='white')
} else {
if(cons == 'Cladocera'){
points(agg2[row2,3+ind1], agg2[row2,3+ind2], pch=25, cex=1.5, col=pt, bg='white')
} else {
points(agg2[row2,3+ind1], agg2[row2,3+ind2], pch=24, cex=1.5, col=pt, bg='white')
}
if(count %in% c(2,5,8)){
if(tracer1=='N'){
mtext(expression(bold(paste(delta^15,'N'))), outer=FALSE, line=2.7, side=1)
} else {
if (tracer1=='C'){
mtext(expression(bold(paste(delta^13,'C'))), outer=FALSE, line=2.7, side=1)
} else {
mtext(expression(bold(paste(delta^2,'H'))), outer=FALSE, line=2.7, side=1)
}
if(count %in% c(1,4,7)){
if(tracer2=='N'){
mtext(expression(bold(paste(delta^15,'N'))), outer=FALSE, line=3.1, side=2)
} else {
if (tracer2=='C'){
mtext(expression(bold(paste(delta^13,'C'))), outer=FALSE, line=3.1, side=2)
} else {
mtext(expression(bold(paste(delta^2,'H'))), outer=FALSE, line=3.1, side=2)
}
if(legend==TRUE){
legend(x=-124, y=-60, legend=c('Phytoplank.', 'Periphyton', 'Terrestrial', 'Calanoida', 'Cladocera', 'Trichoptera'),
pch=c(20,20,20,21,25,24), pt.bg='white', cex=1.5, bty='n', xpd=NA,
col=c('steelblue1','darkgreen','sienna4','black','black','black'))
return(list(gg, agg2))
}
par(mfrow=c(3,3), mar=c(3,2,2,2), oma=c(4,4,1,7.5))
SD_data <- biplot_bylake('H', 'C', label_seed=1, titles=T, legend=T)
biplot_bylake('H', 'N', label_seed=4, titles=F, legend=F)
biplot_bylake('C', 'N', label_seed=7, titles=F, legend=F)
byspeclake <- function(){
cal_sm <- c(1,3,7,10);  cal_lg <- c(2,6);  cal_hi <- c(4,5,8,9)
caddis_sm <- c(20,21,30);  caddis_lg <- c(22,25,26,27);  caddis_hi <- c(23,24,28,29)
clad_sm <- c(12,14,16,17);  clad_lg <- c(13,15)
# cal_sm <- 2;  cal_lg <- 1;  cal_hi <- 3
# caddis_sm <- 7;  caddis_lg <- 6;  caddis_hi <- 8
# clad_sm <- 5;  clad_lg <- 4
par(mfrow=c(3,3), mar=c(0,2,2,2), oma=c(5,5,2,1))
lakes <- c('sm','lg','hi')
laketitles <- c('Montane-Sm.', 'Montane-Lg.', 'Alpine')
consumers <- c('cal','caddis','clad')
constitles <- c('Calanoida','Trichoptera','Cladocera')
count <- 0
modes <- array(NA, dim=c(length(lakes), length(consumers), npreytypes),
list(lakes, consumers, c('phyto','peri','terr')))
means <- modes
phytocreds <- array(NA, dim=c(length(lakes), length(consumers), 2),
list(lakes, consumers, c('cred_mins', 'cred_maxs')))
pericreds <- phytocreds
terrcreds <- phytocreds
for(cons in consumers){
for(lake in lakes){
count <- count + 1
if(cons=='clad' & lake=='hi'){break}
ind <- eval(parse(text=paste(cons,'_',lake,sep='')))
phyto_draws <- as.vector(out[[2]][1,ind,])
phyto <- density(phyto_draws)
phyto_quant <- quantile(phyto_draws, probs=c(0.025,0.975))
peri_draws <- as.vector(out[[2]][2,ind,])
peri <- density(peri_draws)
peri_quant <- quantile(peri_draws, probs=c(0.025,0.975))
terr_draws <- as.vector(out[[2]][3,ind,])
terr <- density(terr_draws)
terr_quant <- quantile(terr_draws, probs=c(0.025,0.975))
phyto_left_shade_x <- phyto$x[which(phyto$x <= phyto_quant[1])]
phyto_left_shade_y <- phyto$y[which(phyto$x <= phyto_quant[1])]
phyto_right_shade_x <- phyto$x[which(phyto$x >= phyto_quant[2])]
phyto_right_shade_y <- phyto$y[which(phyto$x >= phyto_quant[2])]
peri_left_shade_x <- peri$x[which(peri$x <= peri_quant[1])]
peri_left_shade_y <- peri$y[which(peri$x <= peri_quant[1])]
peri_right_shade_x <- peri$x[which(peri$x >= peri_quant[2])]
peri_right_shade_y <- peri$y[which(peri$x >= peri_quant[2])]
terr_left_shade_x <- terr$x[which(terr$x <= terr_quant[1])]
terr_left_shade_y <- terr$y[which(terr$x <= terr_quant[1])]
terr_right_shade_x <- terr$x[which(terr$x >= terr_quant[2])]
terr_right_shade_y <- terr$y[which(terr$x >= terr_quant[2])]
ymax <- max(phyto$y, peri$y, terr$y)
plot(phyto, xlim=c(0,1), ylim=c(0,5 + ymax^(1/1.5)),
las=1, bty='l',
main='', lty=3, xaxs='i', yaxs='i', xaxt='n', col='steelblue1', lwd=2)
# abline(v=c(0,1), lty=2)
polygon(x=c(phyto_left_shade_x, rev(phyto_left_shade_x)),
y=c(phyto_left_shade_y, rep(0,length(phyto_left_shade_y))), col='steelblue1',
border=NA)
polygon(x=c(phyto_right_shade_x, rev(phyto_right_shade_x)),
y=c(phyto_right_shade_y, rep(0,length(phyto_right_shade_y))), col='steelblue1',
border=NA)
lines(peri, lty=2, col='darkgreen', lwd=2)
polygon(x=c(peri_left_shade_x, rev(peri_left_shade_x)),
y=c(peri_left_shade_y, rep(0,length(peri_left_shade_y))), col='darkgreen',
border=NA)
polygon(x=c(peri_right_shade_x, rev(peri_right_shade_x)),
y=c(peri_right_shade_y, rep(0,length(peri_right_shade_y))), col='darkgreen',
border=NA)
lines(terr, lwd=3, lty=1, col='sienna4')
polygon(x=c(terr_left_shade_x, rev(terr_left_shade_x)),
y=c(terr_left_shade_y, rep(0,length(terr_left_shade_y))), col='sienna4',
border=NA)
polygon(x=c(terr_right_shade_x, rev(terr_right_shade_x)),
y=c(terr_right_shade_y, rep(0,length(terr_right_shade_y))), col='sienna4',
border=NA)
if(cons=='clad' | (lake=='hi' & cons=='caddis')){
axis(side=1)
}
print.letter(letters[count], xy=c(0.5,0.9), cex=1.3, font=2)
abline(h=0)
if(count==7){
mtext(paste(constitles[which(consumers==cons)]), side=2, line=2.7)
} else {
if(count==2){
mtext(paste(laketitles[which(lakes==lake)]), side=3, line=1)
} else {
if (count == 3){
mtext(paste(laketitles[which(lakes==lake)]), side=3, line=1)
} else {
if(count == 1){
mtext(paste(constitles[which(consumers==cons)]), side=2, line=2.7)
mtext(paste(laketitles[which(lakes==lake)]), side=3, line=1)
} else {
if(count==4){
mtext(paste(constitles[which(consumers==cons)]), side=2, line=2.7)
}
modes[lake,cons,1] <- phyto$x[which.max(phyto$y)]
modes[lake,cons,2] <- peri$x[which.max(peri$y)]
modes[lake,cons,3] <- terr$x[which.max(terr$y)]
means[lake,cons,1] <- mean(phyto_draws)
means[lake,cons,2] <- mean(peri_draws)
means[lake,cons,3] <- mean(terr_draws)
terrcreds[lake,cons,1] <- terr_quant[1]
terrcreds[lake,cons,2] <- terr_quant[2]
pericreds[lake,cons,1] <- peri_quant[1]
pericreds[lake,cons,2] <- peri_quant[2]
phytocreds[lake,cons,1] <- phyto_quant[1]
phytocreds[lake,cons,2] <- phyto_quant[2]
}
plot(1, 1, type='n', ann=FALSE, bty='n', axes=F)
legend(x=.5,y=1.1, legend=c('Phytoplankton', 'Periphyton', 'Terrestrial'), cex=1.5,
lty=c(3,2,1), bty='n', lwd=c(2,2,3), col=c('steelblue1', 'darkgreen', 'sienna4'))
mtext('Source Contribution', side=1, outer=TRUE, line=3.2, font=2)
mtext('Density', side=2, outer=TRUE, line=3, font=2)
return(setNames(list(modes, means, phytocreds, pericreds, terrcreds), c('modes', 'means',
'phyto credible intervals',
'peri credible intervals',
'terr credible intervals')))
}
byspeclake_out <- byspeclake()
#Michael Vlah
#University of Washington
#vlahm13@gmail.com
rm(list=ls(all=TRUE))
# setup####
nlakes <- 11
nsamp <- 31
group_vector_1 <- c(1,1,2,2,2,2,3,3,3,1,3)
group_vector_2 <- c(2,1,2,3,3,1,2,3,3,2,3,2,1,2,1,2,2,3,3,2,2,1,3,3,1,1,1,3,3,2,1)
species_vector <- c(rep(1,10),2,rep(3,6),4,4,rep(5,11),2)
nspecies <- length(levels(factor(species_vector)))
ngroups <- length(levels(factor(group_vector_1)))
npreds=5
npreytypes=3
library(rjags)
#Michael Vlah
#University of Washington
#vlahm13@gmail.com
rm(list=ls(all=TRUE))
# setup####
nlakes <- 11
nsamp <- 31
group_vector_1 <- c(1,1,2,2,2,2,3,3,3,1,3)
group_vector_2 <- c(2,1,2,3,3,1,2,3,3,2,3,2,1,2,1,2,2,3,3,2,2,1,3,3,1,1,1,3,3,2,1)
species_vector <- c(rep(1,10),2,rep(3,6),4,4,rep(5,11),2)
nspecies <- length(levels(factor(species_vector)))
ngroups <- length(levels(factor(group_vector_1)))
npreds=5
npreytypes=3
library(rjags)
# library(RColorBrewer)
# library(car)
setwd("/home/mike/git/seven_lakes/final/SI/mixing_models")
H_data <- read.csv("raw_H.csv")
C_data <- read.csv("raw_C.csv")
N_data <- read.csv("raw_N.csv")
# source_names <- as.character(H_data[1:11,1])
# cons_names <- as.character(H_data[,5])
inits <- list('xi.1' = rnorm(nsamp, 0, 1/4^2), 'tau.eta.1' = rgamma(nsamp, shape=0.5, scale=1/0.5),
'xi.2' = rnorm(nsamp, 0, 1/4^2), 'tau.eta.2' = rgamma(nsamp, shape=0.5, scale=1/0.5),
'xi.3' = rnorm(nsamp, 0, 1/30^2), 'tau.eta.3' = rgamma(nsamp, shape=0.5, scale=1/0.5))
merge.with.order <- function(x,y, ..., sort = T, keep_order)
{
add.id.column.to.data <- function(DATA)
{
data.frame(DATA, id... = seq_len(nrow(DATA)))
}
order.by.id...and.remove.it <- function(DATA)
{
if(!any(colnames(DATA)=="id...")) stop("The function order.by.id...and.remove.it only works with data.frame objects which includes the 'id...' order column")
ss_r <- order(DATA$id...)
ss_c <- colnames(DATA) != "id..."
DATA[ss_r, ss_c]
}
if(!missing(keep_order))
{
if(keep_order == 1) return(order.by.id...and.remove.it(merge(x=add.id.column.to.data(x),y=y,..., sort = FALSE)))
if(keep_order == 2) return(order.by.id...and.remove.it(merge(x=x,y=add.id.column.to.data(y),..., sort = FALSE)))
warning("The function merge.with.order only accepts NULL/1/2 values for the keep_order variable")
} else {return(merge(x=x,y=y,..., sort = sort))}
}
error.bars <- function(x, y, upper, lower=upper, cap.length=0.1, horiz=F,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("One or more vectors is not the same length")
if(horiz==F) {
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=cap.length, ...)
} else if (horiz==T) {
arrows(x+upper,y, x-lower, y, angle=90, code=3, length=cap.length, ...)
}
mcmc_extractor <- function(mcmc_list){ #return posteriors, modes, and combined posteriors across samples
nchains <- length(mcmc_list)
chain_length <- length(mcmc_list[[1]][,1])
param_list <- gsub(" *\\[.*?\\] *", '', colnames(mcmc_list[[1]]))
params <- levels(factor(param_list))
nparams <- length(params)
param_lengths <- vector('numeric', length=nparams)
for(i in 1:nparams){
param_lengths[i] <- length(which(param_list==paste(params[i])))
}
longest_param <- max(param_lengths)
#create arrays of mode, density, and combined density (for each lake) across all chains
temp <- matrix(data=NA, nrow=chain_length, ncol=nchains)
mode <- matrix(data=NA, nrow=longest_param, ncol=nparams)
dens <- array(data=NA, dim=c(longest_param, nparams, chain_length*3))
combdens <- matrix(data=NA, nrow=chain_length*3*longest_param, ncol=nparams)
for(j in 1:nparams){
indices <- which(param_list==params[j])
for(i in 1:length(indices)){
for(k in 1:nchains){
temp[,k] <- mcmc_list[[k]][,indices[i]][1:length(mcmc_list[[k]][,1])]
}
dens[i,j,] <- as.vector(temp)
mode[i,j] <- density(dens[i,j,], n=10000)$x[which.max(density(dens[i,j,], n=10000)$y)]
}
combdens[,j] <- as.vector(dens[,j,])
}
colnames(mode) <- params
colnames(combdens) <- params
return(list(mode, dens, combdens))
}
print.letter <- function(label="(a)",xy=c(0.1,0.925),...) {
tmp <- par("usr")
text.x <- tmp[1]+xy[1]*diff(tmp[1:2])   #x position, diff=difference
text.y <- tmp[3]+xy[2]*diff(tmp[3:4])   #y position
text(x=text.x, y=text.y, labels=label, ...)
}
bylake <- function(){
sm <- c(1,3,7,10,12,14,16,17,20,21,30)
lg <- c(2,6,13,15,22,25,26,27,31)
hi <- c(4,5,8,9,11,18,19,23,24,28,29)
lakes <- c('sm','lg','hi')
titles <- c('Small - Montane', 'Large - Montane', 'Alpine')
modes <- array(NA, dim=c(length(lakes), npreytypes),
list(lakes, c('phyto','peri','terr')))
means <- array(NA, dim=c(length(lakes), npreytypes),
list(lakes, c('phyto','peri','terr')))
creds <- array(NA, dim=c(length(lakes), 2, 3),
list(lakes, c('cred_mins','cred_maxs'), c('phyto','peri','terr')))
par(mfrow=c(1,3), mar=c(2,2,0,1), oma=c(3,3,3,0))
for(lake in lakes){
ind <- eval(parse(text=paste(lake)))
terr_draws <- as.vector(out[[2]][3,ind,])
terr <- density(terr_draws)
terr_quant <- quantile(terr_draws, probs=c(0.025,0.975))
phyto_draws <- as.vector(out[[2]][1,ind,])
phyto <- density(phyto_draws)
phyto_quant <- quantile(phyto_draws, probs=c(0.025,0.975))
peri_draws <- as.vector(out[[2]][2,ind,])
peri <- density(peri_draws)
peri_quant <- quantile(peri_draws, probs=c(0.025,0.975))
left_shade_x <- terr$x[which(terr$x <= terr_quant[1])]
left_shade_y <- terr$y[which(terr$x <= terr_quant[1])]
right_shade_x <- terr$x[which(terr$x >= terr_quant[2])]
right_shade_y <- terr$y[which(terr$x >= terr_quant[2])]
ymax <- max(phyto$y, peri$y, terr$y)
plot(phyto, xlim=c(0,1), ylim=c(0,14), lwd=1, lty=3,
main='', las=1, xlab='', ylab='', bty='l', xaxs='i', yaxs='i')
polygon(x=c(left_shade_x, rev(left_shade_x)),
y=c(left_shade_y, rep(0,length(left_shade_y))), col='gray50',
border=NA)
polygon(x=c(right_shade_x, rev(right_shade_x)),
y=c(right_shade_y, rep(0,length(right_shade_y))), col='gray50',
border=NA)
lines(peri, lwd=1, lty=2)
lines(terr, lwd=2, lty=1)
mtext('Source Contribution', side=1, outer=TRUE, line=1)
mtext('Density', side=2, outer=TRUE, line=1)
# mtext(titles[which(lakes==lake)], side=3, outer=FALSE, line=-2)
print.letter(letters[which(lakes==lake)], xy=c(0.85,0.9), cex=1.3, font=2)
abline(h=0)
modes[lake,1] <- phyto$x[which.max(phyto$y)]
modes[lake,2] <- peri$x[which.max(peri$y)]
modes[lake,3] <- terr$x[which.max(terr$y)]
means[lake,1] <- mean(phyto_draws)
means[lake,2] <- mean(peri_draws)
means[lake,3] <- mean(terr_draws)
creds[lake,1,1] <- phyto_quant[1]
creds[lake,2,1] <- phyto_quant[2]
creds[lake,1,2] <- peri_quant[1]
creds[lake,2,2] <- peri_quant[2]
creds[lake,1,3] <- terr_quant[1]
creds[lake,2,3] <- terr_quant[2]
}
legend(x=-1.6, y=16.7, legend=c('Phytoplankton', 'Periphyton', 'Terrestrial'),
lty=c(3,2,1), xpd=NA, bty='n', horiz=TRUE, cex=1.2, text.width=c(.4,.4,.35),
lwd=c(1,1,2))
return(setNames(list(modes, means, creds), c('modes', 'means', 'credible intervals')))
}
byspeclake <- function(){
cal_sm <- c(1,3,7,10);  cal_lg <- c(2,6);  cal_hi <- c(4,5,8,9)
caddis_sm <- c(20,21,30);  caddis_lg <- c(22,25,26,27);  caddis_hi <- c(23,24,28,29)
clad_sm <- c(12,14,16,17);  clad_lg <- c(13,15)
par(mfrow=c(3,3), mar=c(0,2,2,2), oma=c(5,5,2,1))
lakes <- c('sm','lg','hi')
laketitles <- c('Montane-Sm.', 'Montane-Lg.', 'Alpine')
consumers <- c('cal','caddis','clad')
constitles <- c('Calanoida','Trichoptera','Cladocera')
count <- 0
modes <- array(NA, dim=c(length(lakes), length(consumers), npreytypes),
list(lakes, consumers, c('phyto','peri','terr')))
means <- modes
phytocreds <- array(NA, dim=c(length(lakes), length(consumers), 2),
list(lakes, consumers, c('cred_mins', 'cred_maxs')))
pericreds <- phytocreds
terrcreds <- phytocreds
for(cons in consumers){
for(lake in lakes){
count <- count + 1
if(cons=='clad' & lake=='hi'){break}
ind <- eval(parse(text=paste(cons,'_',lake,sep='')))
phyto_draws <- as.vector(out[[2]][1,ind,])
phyto <- density(phyto_draws)
phyto_quant <- quantile(phyto_draws, probs=c(0.025,0.975))
peri_draws <- as.vector(out[[2]][2,ind,])
peri <- density(peri_draws)
peri_quant <- quantile(peri_draws, probs=c(0.025,0.975))
terr_draws <- as.vector(out[[2]][3,ind,])
terr <- density(terr_draws)
terr_quant <- quantile(terr_draws, probs=c(0.025,0.975))
phyto_left_shade_x <- phyto$x[which(phyto$x <= phyto_quant[1])]
phyto_left_shade_y <- phyto$y[which(phyto$x <= phyto_quant[1])]
phyto_right_shade_x <- phyto$x[which(phyto$x >= phyto_quant[2])]
phyto_right_shade_y <- phyto$y[which(phyto$x >= phyto_quant[2])]
peri_left_shade_x <- peri$x[which(peri$x <= peri_quant[1])]
peri_left_shade_y <- peri$y[which(peri$x <= peri_quant[1])]
peri_right_shade_x <- peri$x[which(peri$x >= peri_quant[2])]
peri_right_shade_y <- peri$y[which(peri$x >= peri_quant[2])]
terr_left_shade_x <- terr$x[which(terr$x <= terr_quant[1])]
terr_left_shade_y <- terr$y[which(terr$x <= terr_quant[1])]
terr_right_shade_x <- terr$x[which(terr$x >= terr_quant[2])]
terr_right_shade_y <- terr$y[which(terr$x >= terr_quant[2])]
ymax <- max(phyto$y, peri$y, terr$y)
plot(phyto, xlim=c(0,1), ylim=c(0,(5 + ymax^(1/1.5))), las=1, bty='l',
main='', lty=3, xaxs='i', yaxs='i', xaxt='n', col='steelblue1', lwd=2)
polygon(x=c(phyto_left_shade_x, rev(phyto_left_shade_x)),
y=c(phyto_left_shade_y, rep(0,length(phyto_left_shade_y))), col='steelblue1',
border=NA)
polygon(x=c(phyto_right_shade_x, rev(phyto_right_shade_x)),
y=c(phyto_right_shade_y, rep(0,length(phyto_right_shade_y))), col='steelblue1',
border=NA)
lines(peri, lty=2, col='darkgreen', lwd=2)
polygon(x=c(peri_left_shade_x, rev(peri_left_shade_x)),
y=c(peri_left_shade_y, rep(0,length(peri_left_shade_y))), col='darkgreen',
border=NA)
polygon(x=c(peri_right_shade_x, rev(peri_right_shade_x)),
y=c(peri_right_shade_y, rep(0,length(peri_right_shade_y))), col='darkgreen',
border=NA)
lines(terr, lwd=3, lty=1, col='sienna4')
polygon(x=c(terr_left_shade_x, rev(terr_left_shade_x)),
y=c(terr_left_shade_y, rep(0,length(terr_left_shade_y))), col='sienna4',
border=NA)
polygon(x=c(terr_right_shade_x, rev(terr_right_shade_x)),
y=c(terr_right_shade_y, rep(0,length(terr_right_shade_y))), col='sienna4',
border=NA)
if(cons=='clad' | (lake=='hi' & cons=='caddis')){
axis(side=1)
}
print.letter(letters[count], xy=c(0.5,0.9), cex=1.3, font=2)
abline(h=0)
if(count==7){
mtext(paste(constitles[which(consumers==cons)]), side=2, line=2.7)
} else {
if(count==2){
mtext(paste(laketitles[which(lakes==lake)]), side=3, line=1)
} else {
if (count == 3){
mtext(paste(laketitles[which(lakes==lake)]), side=3, line=1)
} else {
if(count == 1){
mtext(paste(constitles[which(consumers==cons)]), side=2, line=2.7)
mtext(paste(laketitles[which(lakes==lake)]), side=3, line=1)
} else {
if(count==4){
mtext(paste(constitles[which(consumers==cons)]), side=2, line=2.7)
}
modes[lake,cons,1] <- phyto$x[which.max(phyto$y)]
modes[lake,cons,2] <- peri$x[which.max(peri$y)]
modes[lake,cons,3] <- terr$x[which.max(terr$y)]
means[lake,cons,1] <- mean(phyto_draws)
means[lake,cons,2] <- mean(peri_draws)
means[lake,cons,3] <- mean(terr_draws)
terrcreds[lake,cons,1] <- terr_quant[1]
terrcreds[lake,cons,2] <- terr_quant[2]
pericreds[lake,cons,1] <- peri_quant[1]
pericreds[lake,cons,2] <- peri_quant[2]
phytocreds[lake,cons,1] <- phyto_quant[1]
phytocreds[lake,cons,2] <- phyto_quant[2]
}
plot(1, 1, type='n', ann=FALSE, bty='n', axes=F)
legend(x=.5,y=1.1, legend=c('Phytoplankton', 'Periphyton', 'Terrestrial'), cex=1.5,
lty=c(3,2,1), bty='n', lwd=c(2,2,3), col=c('steelblue1', 'darkgreen', 'sienna4'))
mtext('Source Contribution', side=1, outer=TRUE, line=3.2, font=2)
mtext('Density', side=2, outer=TRUE, line=3, font=2)
return(setNames(list(modes, means, phytocreds, pericreds, terrcreds), c('modes', 'means',
'phyto credible intervals',
'peri credible intervals',
'terr credible intervals')))
}
reassembler_MCMClist <- function(mcmc_list,var){ #return 'MLEs' and densities as arrays
nchains <- length(mcmc_list)
chain_length <- length(mcmc_list[[1]][,1])
param_list <- gsub(" *\\[.*?\\] *", '', colnames(mcmc_list[[1]]))
all_ps <- which(param_list == var)
num_ps <- length(all_ps)
first_p <- all_ps[1]
total_vals <- num_ps * nchains
sum_chain_lengths <- chain_length * nchains
indices <- seq(1, npreds*npreytypes, npreytypes)
MLE_arr <- array(data=NA, dim=c(npreytypes,npreds))
dens_arr <- array(data=NA, dim=c(npreytypes,npreds,sum_chain_lengths))
#create vector of MLEs across chains
temp <- matrix(data=NA, nrow=chain_length, ncol=nchains)
MLE_vec <- vector('numeric', length=num_ps)
for(i in 1:num_ps){
for(j in 1:nchains){
temp[,j] <- mcmc_list[[j]][,i+first_p-1][1:chain_length]
}
chain <- as.vector(temp)
MLE_vec[i] <- density(chain, n=10000)$x[which.max(density(chain, n=10000)$y)]
}
#assemble MLEs into array
MLE_arr[1,1:npreds] <- MLE_vec[indices]
MLE_arr[2,1:npreds] <- MLE_vec[indices+1]
if(npreytypes == 3){
MLE_arr[3,1:npreds] <- MLE_vec[indices+2]
}
#make separate array of combined chains
temp2 <- matrix(data=NA, nrow=chain_length, ncol=nchains)
temp3 <- matrix(data=NA, nrow=chain_length, ncol=nchains)
temp4 <- matrix(data=NA, nrow=chain_length, ncol=nchains)
for(i in 1:length(indices)){
for(j in 1:nchains){
temp2[,j] <- mcmc_list[[j]][,(first_p-1+indices[i])][1:length(mcmc_list[[j]][,1])]
temp3[,j] <- mcmc_list[[j]][,(first_p-1+(indices+1)[i])][1:length(mcmc_list[[j]][,1])]
if(npreytypes == 3){
temp4[,j] <- mcmc_list[[j]][,(first_p-1+(indices+2)[i])][1:length(mcmc_list[[j]][,1])]
}
dens_arr[1,i,] <- as.vector(temp2)
dens_arr[2,i,] <- as.vector(temp3)
if(npreytypes == 3){
dens_arr[3,i,] <- as.vector(temp4)
}
return(list(MLE_arr, dens_arr))
}
# low phytosynthetic discrimination (eH) ####
#initialize model
mod_source_cor <- jags.model('sensitivity/sources_fixedeH.txt',
data = list('nlakes' = nlakes, 'cn_terr' = C_data[1:11,3],
'cnPOM' = C_data[1:11,2], 'd13C_periraw_data' = C_data[1:11,9],
'cnperi' = C_data[1:11,8], 'd13C_POM_data' = C_data[1:11,4],
'grps1' = group_vector_1, 'ngroups' = ngroups,
'cn_terr_sd' = C_data[1:11,10], 'd13CT_sd' = C_data[1:11,11],
'prec_cnA_grp' = C_data[1:3,13], 'prec_d13CA_grp' = C_data[1:3,15],
'prec_d13Cperi_grp' = C_data[1:3,16],
'd15N_periraw_data' = N_data[1:11,9],
'd15N_POM_data' = N_data[1:11,4], 'd15NT_sd' = N_data[1:11,11],
'prec_d15NA_grp' = N_data[1:3,15], 'prec_d15Nperi_grp' = N_data[1:3,16],
'prec_d2Hperi_grp' = H_data[1:3,20], 'd2H_periraw_data' = H_data[1:11,14],
'd2H2O_data' = H_data[1:11,3], 'd2HT_sd' = H_data[1:11,15],
'd2H_terr' = H_data[1:11,13], 'd13C_terr' = C_data[1:11,5],
'd15N_terr' = N_data[1:11,5],
'fixed_eH'= rep(-204, nlakes)),
#'fixed_eH'= rep(-150, nlakes)),
#'fixed_eH'= rep(-96, nlakes)),
n.chains = 3,
n.adapt = 3000)
update(mod_source_cor, n.iter=5e3)
#run
source_cor <- coda.samples(mod_source_cor, c('mean_d13CA_lake','mean_d13Cperi_lake',
'mean_d15NA_lake','mean_d15Nperi_lake',
'mean_d2HA_lake', 'mean_d2Hperi_lake', 'mean_eH_lake',
'mean_cnA_lake', 'sd_d13Ca', 'sd_d15Na',
'sd_d2H2O', 'sd_d13Cperi', 'sd_d15Nperi', 'sd_d2Hperi',
'cnT', 'd13CT', 'd15NT', 'd2HT'),
thin=100, n.iter=1e5)
